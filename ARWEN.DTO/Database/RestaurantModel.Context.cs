//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARWEN.DTO.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RestaurantContext : DbContext
    {
        public RestaurantContext()
            : base("name=RestaurantContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Customers> Customers { get; set; }
        public DbSet<DataHasChanged> DataHasChanged { get; set; }
        public DbSet<FicheTypes> FicheTypes { get; set; }
        public DbSet<Groups> Groups { get; set; }
        public DbSet<OrderDetail> OrderDetail { get; set; }
        public DbSet<OrderHeader> OrderHeader { get; set; }
        public DbSet<PaymentModules> PaymentModules { get; set; }
        public DbSet<Payments> Payments { get; set; }
        public DbSet<Permissions> Permissions { get; set; }
        public DbSet<Products> Products { get; set; }
        public DbSet<PurchaseDetail> PurchaseDetail { get; set; }
        public DbSet<Purchases> Purchases { get; set; }
        public DbSet<Reservation> Reservation { get; set; }
        public DbSet<RestaurantTables> RestaurantTables { get; set; }
        public DbSet<Settings> Settings { get; set; }
        public DbSet<Suppliers> Suppliers { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Units> Units { get; set; }
        public DbSet<Users> Users { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Cancel_Order(Nullable<long> orderNo, string cancelCause)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var cancelCauseParameter = cancelCause != null ?
                new ObjectParameter("CancelCause", cancelCause) :
                new ObjectParameter("CancelCause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cancel_Order", orderNoParameter, cancelCauseParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Check_Out_Order(Nullable<long> orderNo, Nullable<decimal> totalPrice, string customerName)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("TotalPrice", totalPrice) :
                new ObjectParameter("TotalPrice", typeof(decimal));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Check_Out_Order", orderNoParameter, totalPriceParameter, customerNameParameter);
        }
    
        public virtual ObjectResult<Check_User_Result> Check_User(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Check_User_Result>("Check_User", userNameParameter, passwordParameter);
        }
    
        public virtual int Create_Group(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Group", groupNameParameter);
        }
    
        public virtual int Create_Product(string productName, Nullable<int> groupID, string unitName, Nullable<decimal> price)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Product", productNameParameter, groupIDParameter, unitNameParameter, priceParameter);
        }
    
        public virtual int Create_Table(string tableNo, Nullable<byte> capacity, string description)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(byte));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Table", tableNoParameter, capacityParameter, descriptionParameter);
        }
    
        public virtual int Create_Unit(string unitName, string shortName)
        {
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Unit", unitNameParameter, shortNameParameter);
        }
    
        public virtual int Create_User(string fullName, string userName, string password, Nullable<int> permissionID)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_User", fullNameParameter, userNameParameter, passwordParameter, permissionIDParameter);
        }
    
        public virtual int Delete_Group(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Group", groupIDParameter);
        }
    
        public virtual int Delete_Product(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Product", productIDParameter);
        }
    
        public virtual int Delete_Table(string tableNo)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Table", tableNoParameter);
        }
    
        public virtual int Delete_Unit(string unitName)
        {
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Unit", unitNameParameter);
        }
    
        public virtual int Delete_User(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_User", userIDParameter);
        }
    
        public virtual ObjectResult<Get_All_Groups_Result> Get_All_Groups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Groups_Result>("Get_All_Groups");
        }
    
        public virtual ObjectResult<Get_All_Products_Result> Get_All_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Products_Result>("Get_All_Products");
        }
    
        public virtual ObjectResult<Get_All_Products_By_GroupID_Result> Get_All_Products_By_GroupID(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Products_By_GroupID_Result>("Get_All_Products_By_GroupID", groupIDParameter);
        }
    
        public virtual ObjectResult<Get_All_Tables_Result> Get_All_Tables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Tables_Result>("Get_All_Tables");
        }
    
        public virtual ObjectResult<Get_All_Units_Result> Get_All_Units()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Units_Result>("Get_All_Units");
        }
    
        public virtual ObjectResult<Get_All_Users_Result> Get_All_Users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Users_Result>("Get_All_Users");
        }
    
        public virtual ObjectResult<Get_Available_Products_Result> Get_Available_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Available_Products_Result>("Get_Available_Products");
        }
    
        public virtual ObjectResult<Nullable<long>> Get_Last_OrderNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("Get_Last_OrderNo");
        }
    
        public virtual ObjectResult<Get_Order_Detail_Result> Get_Order_Detail(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Order_Detail_Result>("Get_Order_Detail", orderNoParameter);
        }
    
        public virtual ObjectResult<Get_Order_Detail_For_Auto_Print_Result> Get_Order_Detail_For_Auto_Print(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Order_Detail_For_Auto_Print_Result>("Get_Order_Detail_For_Auto_Print", orderNoParameter);
        }
    
        public virtual ObjectResult<Get_Order_Detail_For_Cashier_Result> Get_Order_Detail_For_Cashier(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Order_Detail_For_Cashier_Result>("Get_Order_Detail_For_Cashier", orderNoParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> Get_Order_State(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("Get_Order_State", orderNoParameter);
        }
    
        public virtual ObjectResult<Get_Orders_List_For_Cashier_Result> Get_Orders_List_For_Cashier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Orders_List_For_Cashier_Result>("Get_Orders_List_For_Cashier");
        }
    
        public virtual ObjectResult<Get_Orders_List_For_Kitchen_Result> Get_Orders_List_For_Kitchen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Orders_List_For_Kitchen_Result>("Get_Orders_List_For_Kitchen");
        }
    
        public virtual ObjectResult<Get_Orders_List_For_Waiter_Result> Get_Orders_List_For_Waiter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Orders_List_For_Waiter_Result>("Get_Orders_List_For_Waiter");
        }
    
        public virtual ObjectResult<Get_Orders_Of_A_Table_Result> Get_Orders_Of_A_Table(string tableNo)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Orders_Of_A_Table_Result>("Get_Orders_Of_A_Table", tableNoParameter);
        }
    
        public virtual ObjectResult<Get_Orders_To_Auto_Print_Result> Get_Orders_To_Auto_Print()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Orders_To_Auto_Print_Result>("Get_Orders_To_Auto_Print");
        }
    
        public virtual ObjectResult<Nullable<int>> Get_Table_Numbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Get_Table_Numbers");
        }
    
        public virtual ObjectResult<Get_Tickets_Result> Get_Tickets(string sTARTDATE, string eNDDATE)
        {
            var sTARTDATEParameter = sTARTDATE != null ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(string));
    
            var eNDDATEParameter = eNDDATE != null ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Tickets_Result>("Get_Tickets", sTARTDATEParameter, eNDDATEParameter);
        }
    
        public virtual int Lock_Order(Nullable<long> orderNo, Nullable<int> lockKeeperUserID)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var lockKeeperUserIDParameter = lockKeeperUserID.HasValue ?
                new ObjectParameter("LockKeeperUserID", lockKeeperUserID) :
                new ObjectParameter("LockKeeperUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Lock_Order", orderNoParameter, lockKeeperUserIDParameter);
        }
    
        public virtual ObjectResult<string> Lock_Order_New(Nullable<long> orderNo, Nullable<int> lockKeeperUserID)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var lockKeeperUserIDParameter = lockKeeperUserID.HasValue ?
                new ObjectParameter("LockKeeperUserID", lockKeeperUserID) :
                new ObjectParameter("LockKeeperUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Lock_Order_New", orderNoParameter, lockKeeperUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Make_OrderDetail(Nullable<long> orderNo, Nullable<int> productID, Nullable<int> amount)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Make_OrderDetail", orderNoParameter, productIDParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Make_OrderHeader(string tableNo, Nullable<int> creatorUserID)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            var creatorUserIDParameter = creatorUserID.HasValue ?
                new ObjectParameter("CreatorUserID", creatorUserID) :
                new ObjectParameter("CreatorUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Make_OrderHeader", tableNoParameter, creatorUserIDParameter);
        }
    
        public virtual ObjectResult<PPC_Get_Order_Detail_Result> PPC_Get_Order_Detail(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PPC_Get_Order_Detail_Result>("PPC_Get_Order_Detail", orderNoParameter);
        }
    
        public virtual ObjectResult<Report_GetOrdersList_Result> Report_GetOrdersList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_GetOrdersList_Result>("Report_GetOrdersList", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Report_ProductPopularity_Result> Report_ProductPopularity(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ProductPopularity_Result>("Report_ProductPopularity", fromDateParameter, toDateParameter);
        }
    
        public virtual int Reset_User_Password(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reset_User_Password", userIDParameter);
        }
    
        public virtual int Set_Order_Edited(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_Order_Edited", orderNoParameter);
        }
    
        public virtual int Set_Order_ReadyToServe(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_Order_ReadyToServe", orderNoParameter);
        }
    
        public virtual int Set_Order_Served(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_Order_Served", orderNoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Unlock_Order(Nullable<long> orderNo, Nullable<int> lockKeeperUserID)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var lockKeeperUserIDParameter = lockKeeperUserID.HasValue ?
                new ObjectParameter("LockKeeperUserID", lockKeeperUserID) :
                new ObjectParameter("LockKeeperUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Unlock_Order", orderNoParameter, lockKeeperUserIDParameter);
        }
    
        public virtual int Update_DataHasChanged(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_DataHasChanged", typeParameter);
        }
    
        public virtual int Update_Group(Nullable<int> groupID, string groupName)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Group", groupIDParameter, groupNameParameter);
        }
    
        public virtual int Update_NotEditable_State(Nullable<long> orderDetailID)
        {
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_NotEditable_State", orderDetailIDParameter);
        }
    
        public virtual int Update_Order_TableNo(Nullable<long> orderNo, string currentTableNo, string newTableNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var currentTableNoParameter = currentTableNo != null ?
                new ObjectParameter("CurrentTableNo", currentTableNo) :
                new ObjectParameter("CurrentTableNo", typeof(string));
    
            var newTableNoParameter = newTableNo != null ?
                new ObjectParameter("NewTableNo", newTableNo) :
                new ObjectParameter("NewTableNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Order_TableNo", orderNoParameter, currentTableNoParameter, newTableNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Update_OrderDetail(Nullable<long> orderNo, Nullable<int> productID, Nullable<int> amount, Nullable<byte> changeState, Nullable<int> editAmount)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var changeStateParameter = changeState.HasValue ?
                new ObjectParameter("ChangeState", changeState) :
                new ObjectParameter("ChangeState", typeof(byte));
    
            var editAmountParameter = editAmount.HasValue ?
                new ObjectParameter("EditAmount", editAmount) :
                new ObjectParameter("EditAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Update_OrderDetail", orderNoParameter, productIDParameter, amountParameter, changeStateParameter, editAmountParameter);
        }
    
        public virtual int Update_OrderPrintState(Nullable<long> orderNo)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_OrderPrintState", orderNoParameter);
        }
    
        public virtual int Update_Product(Nullable<int> productID, string productName, Nullable<int> groupID, string unitName, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Product", productIDParameter, productNameParameter, groupIDParameter, unitNameParameter, priceParameter);
        }
    
        public virtual int Update_Product_Availability(Nullable<int> productID, Nullable<bool> availability)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var availabilityParameter = availability.HasValue ?
                new ObjectParameter("Availability", availability) :
                new ObjectParameter("Availability", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Product_Availability", productIDParameter, availabilityParameter);
        }
    
        public virtual int Update_Settings(string restaurantName, string address, string phoneNumber, string websiteURL, string email, byte[] logo)
        {
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var websiteURLParameter = websiteURL != null ?
                new ObjectParameter("WebsiteURL", websiteURL) :
                new ObjectParameter("WebsiteURL", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Settings", restaurantNameParameter, addressParameter, phoneNumberParameter, websiteURLParameter, emailParameter, logoParameter);
        }
    
        public virtual int Update_Table(string tableNo, Nullable<byte> capacity, string description)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(byte));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Table", tableNoParameter, capacityParameter, descriptionParameter);
        }
    
        public virtual int Update_Table_State(string tableNo, Nullable<bool> state)
        {
            var tableNoParameter = tableNo != null ?
                new ObjectParameter("TableNo", tableNo) :
                new ObjectParameter("TableNo", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Table_State", tableNoParameter, stateParameter);
        }
    
        public virtual int Update_Unit(string unitName, string shortName)
        {
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Unit", unitNameParameter, shortNameParameter);
        }
    
        public virtual int Update_User(Nullable<int> userID, string fullName, string userName, Nullable<int> permissionID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_User", userIDParameter, fullNameParameter, userNameParameter, permissionIDParameter);
        }
    
        public virtual int Update_User_Pass(Nullable<int> userID, string password)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_User_Pass", userIDParameter, passwordParameter);
        }
    }
}
