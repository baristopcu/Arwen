<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>